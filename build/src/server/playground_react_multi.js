// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as Curry from "melange.js/curry.js";
import * as ReasonReactRouter from "reason-react/ReasonReactRouter.js";
import * as Routes_multi from "../../lib/routes/browser/routes_multi.js";
import * as Stdlib__List from "melange/list.js";
import * as React from "react";
import * as Client from "react-dom/client";
import * as JsxRuntime from "react/jsx-runtime";

function home(param) {
  return Routes_multi.$slash$question((function (param) {
                return Routes_multi.$slash((function (param) {
                              return Routes_multi.s("home", param);
                            }), Routes_multi.str, param);
              }), Routes_multi.nil);
}

function project(param) {
  return Routes_multi.$slash$question((function (param) {
                return Routes_multi.$slash((function (param) {
                              return Routes_multi.s("project", param);
                            }), Routes_multi.$$int, param);
              }), Routes_multi.nil);
}

function projectCat(param) {
  return Routes_multi.$slash$question((function (param) {
                return Routes_multi.$slash((function (param) {
                              return Routes_multi.$slash((function (param) {
                                            return Routes_multi.s("project", param);
                                          }), Routes_multi.$$int, param);
                            }), Routes_multi.str, param);
              }), Routes_multi.nil);
}

var router = Routes_multi.one_of({
      hd: Routes_multi.$at$neg$neg$great(home(undefined), (function (name) {
              return {
                      TAG: /* Home */0,
                      name: name
                    };
            })),
      tl: {
        hd: Routes_multi.$at$neg$neg$great(project(undefined), (function (id) {
                return {
                        TAG: /* Project */1,
                        id: id
                      };
              })),
        tl: {
          hd: Routes_multi.$at$neg$neg$great(projectCat(undefined), (function (id, cat) {
                  return {
                          TAG: /* Project_category */2,
                          id: id,
                          category: cat
                        };
                })),
          tl: /* [] */0
        }
      }
    });

function handle(route, children) {
  switch (route.TAG | 0) {
    case /* Home */0 :
        return JsxRuntime.jsx("div", {
                    children: "Welcome home " + route.name
                  });
    case /* Project */1 :
        return JsxRuntime.jsxs("div", {
                    children: [
                      "project id =  " + String(route.id),
                      children
                    ]
                  });
    case /* Project_category */2 :
        return JsxRuntime.jsx("div", {
                    children: "project id =  " + (String(route.id) + " with cat")
                  });
    
  }
}

function href(route) {
  switch (route.TAG | 0) {
    case /* Home */0 :
        return Curry._1(Routes_multi.sprintf(home(undefined)), route.name);
    case /* Project */1 :
        return Curry._1(Routes_multi.sprintf(project(undefined)), route.id);
    case /* Project_category */2 :
        return Curry._2(Routes_multi.sprintf(projectCat(undefined)), route.id, route.category);
    
  }
}

var Client$1 = {};

function Playground_react_multi$Link(Props) {
  var href = Props.href;
  var children = Props.children;
  return JsxRuntime.jsx("a", {
              children: children,
              href: href,
              onClick: (function ($$event) {
                  $$event.preventDefault();
                  ReasonReactRouter.push(href);
                })
            });
}

var Link = {
  make: Playground_react_multi$Link
};

function Playground_react_multi$App(Props) {
  var url = ReasonReactRouter.useUrl(undefined, undefined);
  var path = url.path;
  var pathname = path ? Stdlib__List.fold_left((function (acc, v) {
            return acc + ("/" + v);
          }), "", path) : "/";
  var routes = Routes_multi.match$p(router, pathname);
  var tmp;
  if (routes) {
    tmp = Stdlib__List.fold_right(handle, routes._0, null);
  } else {
    throw {
          MEL_EXN_ID: "Assert_failure",
          _1: [
            "playground_react_multi.re",
            113,
            27
          ],
          Error: new Error()
        };
  }
  return JsxRuntime.jsxs("main", {
              children: [
                JsxRuntime.jsx("nav", {
                      children: JsxRuntime.jsxs("ul", {
                            children: [
                              JsxRuntime.jsx("li", {
                                    children: JsxRuntime.jsx(Playground_react_multi$Link, {
                                          href: href({
                                                TAG: /* Home */0,
                                                name: "tatchi"
                                              }),
                                          children: "Home"
                                        })
                                  }),
                              JsxRuntime.jsx("li", {
                                    children: JsxRuntime.jsx(Playground_react_multi$Link, {
                                          href: href({
                                                TAG: /* Project */1,
                                                id: 88
                                              }),
                                          children: "Project 88"
                                        })
                                  }),
                              JsxRuntime.jsx("li", {
                                    children: JsxRuntime.jsx(Playground_react_multi$Link, {
                                          href: href({
                                                TAG: /* Project_category */2,
                                                id: 88,
                                                category: "todo"
                                              }),
                                          children: "Project 88/todo"
                                        })
                                  })
                            ]
                          })
                    }),
                tmp
              ]
            });
}

var App = {
  make: Playground_react_multi$App
};

var node = document.querySelector("#root");

if (node == null) {
  console.error("Failed to start React: couldn't find the #root element");
} else {
  Client.createRoot(node).render(JsxRuntime.jsx(React.StrictMode, {
            children: JsxRuntime.jsx(Playground_react_multi$App, {})
          }));
}

var node$1 = (node == null) ? undefined : Caml_option.some(node);

export {
  home ,
  project ,
  projectCat ,
  router ,
  handle ,
  href ,
  Client$1 as Client,
  Link ,
  App ,
  node$1 as node,
}
/* router Not a pure module */
