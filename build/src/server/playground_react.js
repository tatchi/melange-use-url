// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as ReasonReactRouter from "reason-react/ReasonReactRouter.js";
import * as Routes from "../../lib/routes/browser/routes.js";
import * as Stdlib__List from "melange/list.js";
import * as React from "react";
import * as Client from "react-dom/client";
import * as JsxRuntime from "react/jsx-runtime";

function home(param) {
  return Routes.$slash$question((function (param) {
                return Routes.$slash((function (param) {
                              return Routes.s("home", param);
                            }), Routes.str, param);
              }), Routes.nil);
}

function project(param) {
  return Routes.$slash$question((function (param) {
                return Routes.$slash((function (param) {
                              return Routes.s("project", param);
                            }), Routes.$$int, param);
              }), Routes.nil);
}

var router = Routes.one_of({
      hd: Routes.$at$neg$neg$great(home(undefined), (function (name) {
              return {
                      TAG: /* Home */0,
                      name: name
                    };
            })),
      tl: {
        hd: Routes.$at$neg$neg$great(project(undefined), (function (id) {
                return {
                        TAG: /* Project */1,
                        id: id
                      };
              })),
        tl: /* [] */0
      }
    });

function handle(route) {
  if (route.TAG === /* Home */0) {
    return JsxRuntime.jsx("div", {
                children: "Welcome home " + route.name
              });
  } else {
    return JsxRuntime.jsx("div", {
                children: "project id =  " + String(route.id)
              });
  }
}

function href(route) {
  if (route.TAG === /* Home */0) {
    return "/home/" + route.name;
  } else {
    return "/project/" + String(route.id);
  }
}

var Client$1 = {};

function Playground_react$Link(Props) {
  var href = Props.href;
  var children = Props.children;
  return JsxRuntime.jsx("a", {
              children: children,
              href: href,
              onClick: (function ($$event) {
                  $$event.preventDefault();
                  ReasonReactRouter.push(href);
                })
            });
}

var Link = {
  make: Playground_react$Link
};

function Playground_react$App(Props) {
  var url = ReasonReactRouter.useUrl(undefined, undefined);
  var path = url.path;
  var pathname = path ? Stdlib__List.fold_left((function (acc, v) {
            return acc + ("/" + v);
          }), "", path) : "/";
  var match = Routes.match$p(router, pathname);
  if (typeof match === "number") {
    throw {
          MEL_EXN_ID: "Assert_failure",
          _1: [
            "playground_react.re",
            81,
            27
          ],
          Error: new Error()
        };
  }
  return JsxRuntime.jsxs("main", {
              children: [
                JsxRuntime.jsx("nav", {
                      children: JsxRuntime.jsxs("ul", {
                            children: [
                              JsxRuntime.jsx("li", {
                                    children: JsxRuntime.jsx(Playground_react$Link, {
                                          href: href({
                                                TAG: /* Home */0,
                                                name: "tatchi"
                                              }),
                                          children: "Home"
                                        })
                                  }),
                              JsxRuntime.jsx("li", {
                                    children: JsxRuntime.jsx(Playground_react$Link, {
                                          href: href({
                                                TAG: /* Project */1,
                                                id: 88
                                              }),
                                          children: "Project 88"
                                        })
                                  })
                            ]
                          })
                    }),
                handle(match._0)
              ]
            });
}

var App = {
  make: Playground_react$App
};

var node = document.querySelector("#root");

if (node == null) {
  console.error("Failed to start React: couldn't find the #root element");
} else {
  Client.createRoot(node).render(JsxRuntime.jsx(React.StrictMode, {
            children: JsxRuntime.jsx(Playground_react$App, {})
          }));
}

var node$1 = (node == null) ? undefined : Caml_option.some(node);

export {
  home ,
  project ,
  router ,
  handle ,
  href ,
  Client$1 as Client,
  Link ,
  App ,
  node$1 as node,
}
/* router Not a pure module */
